services:
    app: &app_service
        container_name: symfony
        build:
            context: .
            dockerfile: Dockerfile
            target: base
        image: php83-fpm
        restart: unless-stopped
        environment:
            PHP_OPCACHE_ENABLE: 1
            PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
            PHP_OPCACHE_MAX_ACCELERATED_FILES: 20000
            PHP_OPCACHE_MEMORY_CONSUMPTION: 256
            PHP_OPCACHE_MAX_WASTED_PERCENTAGE: 10
            PHP_OPCACHE_JIT_BUFFER_SIZE: "100M"
            PHP_OPCACHE_JIT: "tracing"
        volumes:
            - ./:/var/www
            - ./docker/php/conf.d/fpm.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
        networks:
            - api-network
    web-server:
        container_name: nginx
        image: nginx:1.24
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./docker/nginx:/etc/nginx/conf.d
            - ./ssl:/etc/nginx/ssl
            - ./:/var/www
        networks:
            - api-network
    db:
        container_name: postgres
        image: postgres:16
        restart: unless-stopped
        volumes:
            - "database_data:/var/lib/postgresql/data/"
        environment:
            POSTGRES_USER: ${DB_USERNAME} # The PostgreSQL user (useful to connect to the database)
            POSTGRES_PASSWORD: ${DB_PASSWORD} # The PostgreSQL password (useful to connect to the database)
            POSTGRES_DB: ${DB_DATABASE} # The PostgreSQL default database (automatically created at first launch)
        ports:
            - "5432:5432"
        depends_on:
            - cache
        networks:
            - api-network
    cache:
        container_name: redis
        image: redis:7
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - api-network
    migrations:
        <<: *app_service
        container_name: migrations
        restart: no
        command: [ "php", "bin/console", "doctrine:migrations:migrate", "--no-interaction" ]
networks:
    api-network:
        driver: bridge
volumes:
    database_data: